/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.edu.gui.Responsable;

import com.edu.entities.RapportOffreRes;
import com.edu.entities.ReportingPDFPresponsable;
import com.edu.gui.Client.InfoAnnonce;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author MrBenrhouma
 */
public class StatGraphDoc extends javax.swing.JFrame {

    /**
     * Creates new form StatGraphDoc
     */
    public StatGraphDoc() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        doc = new javax.swing.JLabel();
        graph = new javax.swing.JLabel();
        msg = new javax.swing.JLabel();
        x1 = new javax.swing.JLabel();
        x = new javax.swing.JLabel();
        Acceuil = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        doc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 90, 0), 2));
        doc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                docMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                docMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                docMouseExited(evt);
            }
        });
        getContentPane().add(doc, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 150, 86));

        graph.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 90, 0), 2));
        graph.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                graphMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                graphMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                graphMouseExited(evt);
            }
        });
        getContentPane().add(graph, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, 150, 86));

        msg.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        msg.setForeground(new java.awt.Color(255, 90, 0));
        getContentPane().add(msg, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 200, 300, 20));

        x1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                x1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                x1MouseExited(evt);
            }
        });
        getContentPane().add(x1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 0, 30, 30));

        x.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                xMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                xMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                xMouseExited(evt);
            }
        });
        getContentPane().add(x, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 30, 30));
        getContentPane().add(Acceuil, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, 280));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setLocationRelativeTo(null);
        BufferedImage imgHome = null;
        try {
            imgHome = ImageIO.read(new File("res/arriere.jpg"));
        } catch (IOException ex) {
            Logger.getLogger(Acceuil_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
          Image ri = imgHome.getScaledInstance(Acceuil.getWidth(), Acceuil.getHeight(), 0);
          Acceuil.setIcon(new ImageIcon(ri));
         
           BufferedImage imggraph = null;
        try {
            imggraph = ImageIO.read(new File("res/charteoff.png"));
        } catch (IOException ex) {
            Logger.getLogger(Acceuil_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
          Image rgraph = imggraph.getScaledInstance(graph.getWidth(), graph.getHeight(), 0);
          graph.setIcon(new ImageIcon(rgraph));
          
              BufferedImage imgdoc = null;
        try {
            imgdoc = ImageIO.read(new File("res/rapportoff.png"));
        } catch (IOException ex) {
            Logger.getLogger(Acceuil_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
          Image rdoc = imgdoc.getScaledInstance(doc.getWidth(), doc.getHeight(), 0);
          doc.setIcon(new ImageIcon(rdoc));
          
       BufferedImage imgx = null;
        try {
            imgx = ImageIO.read(new File("res/x1.png"));
        } catch (IOException ex) {
            Logger.getLogger(InfoAnnonce.class.getName()).log(Level.SEVERE, null, ex);
        }
          Image ridx = imgx.getScaledInstance(x.getWidth(), x.getHeight(), 0);
          x.setIcon(new ImageIcon(ridx));
          
        BufferedImage imgxr = null;
        try {
            imgxr = ImageIO.read(new File("res/-1.png"));
        } catch (IOException ex) {
            Logger.getLogger(InfoAnnonce.class.getName()).log(Level.SEVERE, null, ex);
        }
          Image ridxr = imgxr.getScaledInstance(x1.getWidth(), x1.getHeight(), 0);
          x1.setIcon(new ImageIcon(ridxr));
          
    }//GEN-LAST:event_formWindowOpened

    private void graphMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_graphMouseEntered
             BufferedImage imggraph = null;
        try {
            imggraph = ImageIO.read(new File("res/charteon.png"));
        } catch (IOException ex) {
            Logger.getLogger(Acceuil_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
          Image rgraph = imggraph.getScaledInstance(graph.getWidth(), graph.getHeight(), 0);
          graph.setIcon(new ImageIcon(rgraph));
    }//GEN-LAST:event_graphMouseEntered

    private void graphMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_graphMouseExited
             BufferedImage imggraph = null;
        try {
            imggraph = ImageIO.read(new File("res/charteoff.png"));
        } catch (IOException ex) {
            Logger.getLogger(Acceuil_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
          Image rgraph = imggraph.getScaledInstance(graph.getWidth(), graph.getHeight(), 0);
          graph.setIcon(new ImageIcon(rgraph));
    }//GEN-LAST:event_graphMouseExited

    private void graphMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_graphMouseClicked
        try {
            StatistiqueResponsable sr = new StatistiqueResponsable("Statistiques");
            sr.setVisible(true);
            
             StatistiquesRevenus srv = new StatistiquesRevenus("Les revenues");
            srv.setVisible(true);
            
        } catch (IOException ex) {
            Logger.getLogger(StatGraphDoc.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_graphMouseClicked

    private void docMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_docMouseExited
       BufferedImage imgdoc = null;
        try {
            imgdoc = ImageIO.read(new File("res/rapportoff.png"));
        } catch (IOException ex) {
            Logger.getLogger(Acceuil_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
          Image rdoc = imgdoc.getScaledInstance(doc.getWidth(), doc.getHeight(), 0);
          doc.setIcon(new ImageIcon(rdoc));
    }//GEN-LAST:event_docMouseExited

    private void docMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_docMouseEntered
        BufferedImage imgdoc = null;
        try {
            imgdoc = ImageIO.read(new File("res/rapporton.png"));
        } catch (IOException ex) {
            Logger.getLogger(Acceuil_Responsable.class.getName()).log(Level.SEVERE, null, ex);
        }
          Image rdoc = imgdoc.getScaledInstance(doc.getWidth(), doc.getHeight(), 0);
          doc.setIcon(new ImageIcon(rdoc));
    }//GEN-LAST:event_docMouseEntered

    private void docMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_docMouseClicked
      
        
            msg.setText("Patientez...");
          
      
        String[]args={"a"};
      if(args!=null)
      {
        msg.setText(null);
        ReportingPDFPresponsable.main(args);
        RapportOffreRes.main(args);
        msg.setText("Vos documents sont enregistr√©s sous la racine C");
      }
    }//GEN-LAST:event_docMouseClicked

    private void xMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseExited
          BufferedImage imgx = null;
        try {
            imgx = ImageIO.read(new File("res/x1.png"));
        } catch (IOException ex) {
            Logger.getLogger(InfoAnnonce.class.getName()).log(Level.SEVERE, null, ex);
        }
          Image ridx = imgx.getScaledInstance(x.getWidth(), x.getHeight(), 0);
          x.setIcon(new ImageIcon(ridx));
          
    }//GEN-LAST:event_xMouseExited

    private void xMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseEntered
          BufferedImage imgx = null;
        try {
            imgx = ImageIO.read(new File("res/x2.png"));
        } catch (IOException ex) {
            Logger.getLogger(InfoAnnonce.class.getName()).log(Level.SEVERE, null, ex);
        }
          Image ridx = imgx.getScaledInstance(x.getWidth(), x.getHeight(), 0);
          x.setIcon(new ImageIcon(ridx));
          
    }//GEN-LAST:event_xMouseEntered

    private void xMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_xMouseClicked
        this.setVisible(false);
    }//GEN-LAST:event_xMouseClicked

    private void x1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_x1MouseExited
          BufferedImage imgxr = null;
        try {
            imgxr = ImageIO.read(new File("res/-1.png"));
        } catch (IOException ex) {
            Logger.getLogger(InfoAnnonce.class.getName()).log(Level.SEVERE, null, ex);
        }
          Image ridxr = imgxr.getScaledInstance(x1.getWidth(), x1.getHeight(), 0);
          x1.setIcon(new ImageIcon(ridxr));
    }//GEN-LAST:event_x1MouseExited

    private void x1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_x1MouseEntered
          BufferedImage imgxr = null;
        try {
            imgxr = ImageIO.read(new File("res/-2.png"));
        } catch (IOException ex) {
            Logger.getLogger(InfoAnnonce.class.getName()).log(Level.SEVERE, null, ex);
        }
          Image ridxr = imgxr.getScaledInstance(x1.getWidth(), x1.getHeight(), 0);
          x1.setIcon(new ImageIcon(ridxr));
    }//GEN-LAST:event_x1MouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StatGraphDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StatGraphDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StatGraphDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StatGraphDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StatGraphDoc().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Acceuil;
    private javax.swing.JLabel doc;
    private javax.swing.JLabel graph;
    private javax.swing.JLabel msg;
    private javax.swing.JLabel x;
    private javax.swing.JLabel x1;
    // End of variables declaration//GEN-END:variables
}
